version: 0.2

env:
  variables:
    SERVERLESS_ACCESS_KEY: "AKH0BPKbz2RQUgkNr4unbgVJqMJVCEtsq22E7ACnKVv8Z"  # Replace with the actual Serverless access key

phases:
  install:
    runtime-versions:
      python: 3.11
      nodejs: 18  # Use Node.js 18 directly
    commands:
      - echo "============================================="
      - echo "Verifying Node.js and npm versions:"
      - node -v && npm -v
      - echo "============================================="
      - echo "Clearing NPM cache to avoid archive issues..."
      - npm cache clean --force
      - echo "Installing Serverless Framework..."
      - npm install -g serverless
      - echo "Installing Serverless Deployment Bucket Plugin..."
      - npm install -g serverless-deployment-bucket
      - echo "Serverless Framework and required plugin installed successfully!"
      - serverless --version

  build:
    commands:
      - echo "============================================="
      - echo "DEBUG - Checking STAGE environment variable..."
      - echo "STAGE value is - '$STAGE'"
      - echo "============================================="
      - echo "Authenticating Serverless Framework using access key..."
      - export SERVERLESS_ACCESS_KEY=${SERVERLESS_ACCESS_KEY}
      - echo "Zipping the Lambda function code..."
      - cd src && zip -r ../patient_record_service.zip . && cd ..
      - echo "---------------------------------------------"
      - echo "Deploying to AWS Lambda using Serverless Framework..."
      - serverless deploy --stage $STAGE
      - echo "---------------------------------------------"
      - echo "Publishing Lambda function version..."
      - LAMBDA_VERSION=$(aws lambda publish-version \
          --function-name patient-record-service-$STAGE \
          --query Version \
          --output text)
      - echo "Published Lambda Version - $LAMBDA_VERSION"
      - echo "============================================="
      - echo "Updating AppSpec file with STAGE and VERSION..."
      - sed "s/\${STAGE}/$STAGE/g; s/\${VERSION}/$LAMBDA_VERSION/g" appspec.yml > appspec-resolved.yml
      - mv appspec-resolved.yml appspec.yml
      - echo "Final appspec.yml file content:"
      - cat appspec.yml
      - echo "Build stage completed successfully."

artifacts:
  files:
    - appspec.yml
    - patient_record_service.zip
  discard-paths: yes